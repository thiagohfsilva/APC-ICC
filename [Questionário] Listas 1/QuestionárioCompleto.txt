Iniciado em
Estado

Concluída em
Tempo empregado
Avaliar

domingo, 18 jun. 2023, 15:42
Finalizada

domingo, 18 jun. 2023, 23:03

7 horas 21 minutos

9,29 de um máximo de 10,00(92,86%)
Questão 1
Correto
Atingiu 1,00 de 1,00

A Chamada Invertida

Os professores de APC comumente realizam a chamada em ordem alfabética, entretanto, os alunos que ficam no final da chamada
gostariam de ser os primeiros a serem chamados de vez em quando. Nesse sentido, os professores pediram a sua ajuda para elaborar

um programa que recebe os nomes dos alunos de uma turma e os organiza em ordem alfabética inversa.

A Entrada consiste de:

* Um número contendo a quantidade de alunos na lista.
* Sequência de nomes separados por linha em ordem alfabética.

A Saída deve apresentar:
e Nomes fornecidos, separados por espaço, em ordem alfabética invertida.

Observações:

e O método sort é útil para a solução deste exercício. Para ordenar uma lista de forma decrescente faça:

lista.sort (reverse=True)

For example:

Input

4

Alexandre da Silva
Ana Roberta
Leandro Beloti
Zara Araújo

6

Aline de Sousa
Edison Ishikawa
Guilherme Novaes
Lucas Costa
Maristela Holanda

Vinicius Borges

0

Result

Zara Araújo
Leandro Beloti
Ana Roberta

Alexandre da Silva

Vinicius Borges
Maristela Holanda
Lucas Costa
Guilherme Novaes
Edison Ishikawa
Aline de Sousa

Answer: (penalty regime: 0,0, 10, 20, ... %)

lista_de_pessoas += [texto]

lista_de_pessoas.sort(reverse =

1 |n = int(input())

2 |lista_de_pessoas =[]
3v|for i in range(n):
4 texto = input()
5

6

7

8

Iv

18 print(elemento)
11

True)

for elemento in lista de pessoas:
Input

4

Alexandre da Silva
Ana Roberta
Leandro Beloti
Zara Araújo

6

Aline de Sousa
Edison Ishikawa
Guilherme Novaes
Lucas Costa
Maristela Holanda

Vinicius Borges

0

15

Edison Ishikawa
Felipe Lima
Giovani Amorim
Helena Souza
Leandro Beloti
Leandro Beloti
Leonardo Silva
Lucas Costa
Luíza Ferreira
Maria Santos
Otávio Pereira
Pedro Pereira
Rodrigo Rodrigues
Sofia Dias

Vitória Oliveira

8

Alex Rodrigues
Alexandre Rodrigues
Guilherme Alves
Guilherme Kornelius
Leandro Beloti
Leandro Santos
Leonardo Santos

Leonardo Zico

11

Alex
Alexander
Alexandre
Beatriz
Bernardo
Breno
Giovan
Giovana
Helena
Isa

Isadora

Expected

Zara Araújo
Leandro Beloti
Ana Roberta
Alexandre da Silva

Vinicius Borges
Maristela Holanda
Lucas Costa
Guilherme Novaes
Edison Ishikawa

Aline de Sousa

Vitória Oliveira
Sofia Dias
Rodrigo Rodrigues
Pedro Pereira
Otávio Pereira
Maria Santos
Luíza Ferreira
Lucas Costa
Leonardo Silva
Leandro Beloti
Leandro Beloti
Helena Souza
Giovani Amorim
Felipe Lima
Edison Ishikawa

Leonardo Zico
Leonardo Santos
Leandro Santos
Leandro Beloti
Guilherme Kornelius
Guilherme Alves
Alexandre Rodrigues
Alex Rodrigues

Isadora
Isa
Helena
Giovana
Giovan
Breno
Bernardo
Beatriz
Alexandre
Alexander
Alex

Got

Zara Araújo
Leandro Beloti
Ana Roberta
Alexandre da Silva

Vinicius Borges
Maristela Holanda
Lucas Costa
Guilherme Novaes
Edison Ishikawa

Aline de Sousa

Vitória Oliveira
Sofia Dias
Rodrigo Rodrigues
Pedro Pereira
Otávio Pereira
Maria Santos
Luíza Ferreira
Lucas Costa
Leonardo Silva
Leandro Beloti
Leandro Beloti
Helena Souza
Giovani Amorim
Felipe Lima
Edison Ishikawa

Leonardo Zico
Leonardo Santos
Leandro Santos
Leandro Beloti
Guilherme Kornelius
Guilherme Alves
Alexandre Rodrigues
Alex Rodrigues

Isadora
Isa
Helena
Giovana
Giovan
Breno
Bernardo
Beatriz
Alexandre
Alexander
Alex

Passou em todos os teste! ¥

Para resolver esta questão, pode-se utilizar o método sort com o reverse = True

[Correto |

Notas para este envio: 1,00/1,00.
Questão 2

Parcialmente correto

Atingiu 0,43 de 1,00

Jogo Amongus

No jogo Amongus os jogadores tem como objetivo remover os impostores da partida. A sua missão é implementar um programa que
receberá um inteiro ‘n’ que será a quantidade de jogadores na partida e nas ‘n’ linhas seguintes tem-se os nome de usuários (username)
dos jogadores. Na última linha de entrada, tem-se os usernames dos impostores separados por um espaço. Dessa forma, deve-se exibir
na tela a lista composta pelos crewmates, ou seja, os participantes que não são impostores.

A Entrada consiste de:

e Onúmero de jogadores.
e Ousername de cada jogador (separados por linha).

A Saída deve apresentar:

* Os usernames do jogadores que não são impostores na ordem que são fornecidos em uma mesma linha separados por espaço.

Observações:

e Os usernames não contém espaços e não são únicos.
e Para exibir uma lista na tela sem colchetes você pode utilizar o seguinte comando:

print (*lista)

Descrição do Exemplo 1:

e Observa-se que na última linha recebemos os nomes dos impostores (aluno2 e aluno4). Como a saída são somente os jogadores que
não são impostores é necessário remover os impostores da lista, por isso na saída tem-se aluno1, aluno3 e aluno5, o aluno2 e aluno4
não aparece no resultado final.

For example:

Input Result

5 alunol aluno3 aluno5
alunol

aluno2

aluno3

aluno4

alunos

aluno2 aluno4

3 lucas edson
lucas

leandro

edson

leandro

1 lucas
lucas

Answer: (penalty regime: 0,0, 10, 20, ... %)
1 |n = int(input())

2 |lista =[]

3v|for i in range(n):

4 texto = input()
5v if texto in lista:
6 continue

7x else:

8 lista += [texto] É 4
9
18 |killer = input().split() *

11
12 |nokiller =[]
13
14 v| for element in lista:

15 v if element in killer:

16 continue

17 v else:

18 nokiller += [element]
19
29 |print(*nokiller)
21
22

Input

Expected

Got

4.5

alunol

aluno2

aluno3

aluno4

alunos

aluno2 aluno4

alunol aluno3
aluno5

alunol aluno3
aluno5

ax

413
lucas
leandro
edson
leandro

lucas edson

lucas edson

lucas

lucas

lucas

“1
ricardo

ricardo

v7 (14

leandro

paulo

guilherme

carol

lucas

giovana

luiza

malu

ana

pedro

enzo

wellington

beatriz

gustavo

gustavo wellington enzo pedro malu luiza leandro giovana
paulo lucas guilherme carol

ana beatriz

ana beatriz

416
pedro
vitoria
marco
polo
marco
marco

marco vitoria

pedro polo

pedro polo

Your code failed one or more hidden tests.

Para resolver esta questão, você pode usar a função filter ou utilizar o operado in entre listas

Parcialmente correto

Notas para o envio: 0,43/1,00. De acordo com as tentativas anteriores 0,43/1,00.
Questão 3
Correto
Atingiu 1,00 de 1,00

Escolinha do Professor Raimundo (Matemática)

Os alunos da Escolinha do Professor Raimundo estão perdidos nas aulas de matemática. O professor Raimundo passou como tarefa,
uma sequência de números e um número n e deseja saber qual desses números são múltiplos de n. Devido a dificuldade dos alunos,
eles pediram sua ajuda para fazer um programa que ajude-os a verificar os resultados obtidos. Por isso, elabore um código que
determine quais dos números são múltiplos de n.

A Entrada consiste de:
e Sequência de inteiros (separados por espaço).
e Númeron.

A Saída deve apresentar:
e Números da entrada que são múltiplos de n (na mesma linha separados por espaço).

Observações:
¢ Para exibir uma lista na tela sem colchetes você pode utilizar o seguinte comando:

print (*lista)
Descrição do Exemplo 1:

e Dentre os número fornecidos (1 45 78 10 2 5 40), somente os números 45, 10, 5,0 são múltiplos de 5, pois podem ser obtidos como
5 vezes algum outro número inteiro e, por isso, foram apresentados na saída.

For example:

Input Result
14578102540 45 1050
5

3 45 89 33 77 12 15 40 0/3 45 33 12 15 0
3

4 78 13 533 1 78 13 533
13

Answer: (penalty regime: 0,0, 10, 20, ... %)

1 |listanum = input().split()
2 |divisor = int(input())

3 |divlist =[]

4v|for element in listanum:

5 intelement = int(element)
6r if intelement%divisor ==
7 divlist +=[intelement]
8 |print(*divlist)

9

Input Expected Got

/ 14578102540 45 10 5 0 451050
5

/ |3 45 893377 12 15 400 3 45 33 12 15 0/3 45 3312150
3

VY |478 135331 78 13 533 78 13 533
13

Y 25 89651325 9652 0 630 630
3

v
9

Y $859 678 85 974 521 459 6987 120 5036 120 120
24

Passou em todos os teste! 4

Para resolver esta questão, você pode usar o operador %

[correto |

Notas para este envio: 1,00/1,00.
Questão 4
Correto
Atingiu 1,00 de 1,00

A Soma de Adinilson

O Adinilson gosta de brincar de fazer adições peculiares. Buscando fazer uma soma diferente, Adinilson irá percorrer os números de
uma lista e somar o acumulativo ao número seguinte. Acreditando que a soma ainda está muito comum, ele decide que o primeiro
elemento da soma deve sempre ser multiplicado por 2 e o segundo multiplicado por 1/2. Sob essa lógica, ao receber uma lista de
inteiros, soma-se o primeiro elemento multiplicado por 2 ao segundo elemento multiplicado por 1/2. Com este resultado, multiplica-se
por 2 e faz a soma com o terceiro elemento da lista multiplicado por 1/2. Com este novo resultado, multiplica-se por 2 e faz a soma com
o quarto elemento da lista multiplicado por 1/2. E assim, sucessivamente até o final da lista. Ao percorrer toda a lista, exibe-se o
resultado obtido pela soma do Adinilson.

A Entrada consiste de:
e Conjunto de inteiros separados por espaço.

ASaída deve apresentar:
* Soma do Adinilson com duas casas decimais de precisão.

Descrição do Exemplo 1:

e Aoreceber 12340 primeiro número é multiplicado por 2 e somado com o segundo vezes 1/2 obtém-se 3. Ao continuar o processo,
ou seja, multiplicamos 3 por 2 e soma-se com 3 (terceiro elemento) vezes 1/2, obtém-se como resultado 7,5. Por fim, 7,5 será
multiplicado por 2 e somado com 4 (quarto elemento) vezes 1/2. Ao final, obteve-se 17.00 como resultado da soma de Adinilson
com duas casas decimais.

For example:
Input Result
1234 17.00
024 4.00

011235 8 13 21 34 55 89| 1859.50

vv
Answer: (penalty regime: 0,0, 10, 20, ... %)
1 |numeros = input().split()
2 |rest = int(numeros[@])
3v|for i in range(1,len(numeros)):
4 rest = rest*2 + int(numeros[i])*@.5
5 |print(f"{rest:.2f}")
6
a
Input Expected | Got

4 1234 17.00 17.00 <a
v¥ |024 4.00 4.00 LÁ
/ 011235 8 13 21 34 55 89) 1859.50 | 1859.50 4
9 #136912 15 117.50 117.50 (4
¥ \0 0.00 0.00 <a
VY (-1 -2 -3 -4 -5 -36.50 -36.50 |W

Passou em todos os teste! 4

Para resolver esta questão, você pode usar range de 1 até tamanho da lista (len(I)).

[correto |

Notas para este envio: 1,00/1,00.
Questão 5
Correto
Atingiu 1,00 de 1,00

O escritor Parôn

O escritor Parôn detesta escrever com palavras que não tenham um número de vogais pares. Quando Parôn está buscando palavras de
inspiração para escrever ele também se irrita lendo palavras com número ímpar de vogais. Para evitar o estresse, Parôn te convocou
para retirar todas as palavras que o deixam bravo enquanto busca por inspiração (remover palavras com quantidade de vogais
ímpares). Para isso, elabore uma função chamada paron que recebe uma lista de palavras e retorna uma lista com somente as palavras
com a quantidade de vogais pares.

A Entrada consiste de:
e Não hd leitura de dados. A função é chamada pelo sistema automaticamente, passando como parâmetro uma lista de strings.

ASaída deve apresentar:
e Alista de palavras com vogais pares.

Observações:
* Considere que a lista de palavras de entrada não contém acentos nas vogais.

Descrição do Exemplo 1:
e Aoreceber alista = [“palavra’, “escrever”, “detesta”, “lista” “todas”] a função paron deve retornar uma lista contendo as palavras
“lista” e “todas”, pois somente estes elementos da lista atendem ao critério estabelecido.

For example:

Test Result
print (paron(['palavra', 'escrever', 'detesta', ‘lista’, 'todas'])) |['lista', 'todas']
print (paron({['todos', 'nos', 'adoramos!, ‘disciplina', 'apc'])) ['todos', 'adoramos’, ‘'disciplina']

print (paron([])) 0

Answer: (penalty regime: 0,0, 10, 20, ... %)

RESET ANSWER

1 |vogais = ["a","a",

2 nen, "é",

3 "i", "i", "i", "i",

4 "o","6","0", "6", "6",
5 "u","a","u","a",]

6 v|def checkword(palavra):

7 i=0

By for letra in palavra:

9v if letra. lower() in vogais:
18 it=1

11v if i%2 == 0:

12 return True

13v else:

14 return False

15

16 «| def paron(palavras):

17 newpalavras =[]

18v for palavra in palavras:
19 ¥ if checkword(palavra):
20 newpalavras += [palavra]
21 v else:

22 continue

23 return newpalavras

24

Test

A print (paron(['palavra',
"detesta", 'lista!,

4 |print(paron(['todos'!,
'disciplina', ‘ape']))

4 =| print (paron([]))

A print (paron(['compilar’,

"code", "debug",
"git', ‘github’,

SC print (paron(['aprovar',

"refletir", ‘estudar',

"caixa']))

VY |print(paron(['Leandro',

"Bruno", 'Ana',

"Alexandre", 'Iago']))

Passou em todos os teste! 4

'interpretar"',

"exercicio",

'Maristela',

Expected

['lista', "todas']
["todos'", 'adoramos',
‘disciplina']

0]

[‘interpretar', 'code!,

‘debug', "github']

['pensar', 'prova']

['Maristela', ‘Bruno’,

‘Ana’, ‘Lucas',

‘Alexandre']

Got

['lista', 'todas']
['todos', 'tadoramos',
‘disciplina']

(]

['interpretar', ‘code',

‘debug’, 'github']

['pensar', 'prova'l

['Maristela', 'Bruno',

"Ana', ‘Lucas',

"Alexandre" ]

Para resolver esta questão, atente para o uso das diferentes formas de formatação da função print().

[correto

Notas para este envio: 1,00/1,00.
Questão 6
Correto
Atingiu 1,00 de 1,00

Fatiando Listas

Escreva um programa que recebe uma quantidade de inteiros separados por um espaço em uma linha. Na outra linha, dois inteiros que
representam o índice inicial e final do fatiamento, respectivamente. Como saída o programa deve apresentar a lista fatiada conforme
os índices recebidos.

A Entrada consiste de:
e Linha com os inteiros, separados por um espaço.
e Linha com dois inteiros, separados por um espaço, que representam o início e fim do fatiamento.

ASaída deve apresentar:
e Lista após o fatiamento.

Observações:
e Listas no python iniciam-se com o indice O.

Descrição do Exemplo 1:
e Conforme os índices recebidos, o fatiamento inclui o primeiro índice e exclui o último. Por isso, a saída apresenta os elementos
presentes do segundo índice até o quarto, pois o quinto não é incluído.

For example:

Input Result
01234567 12, 3, 4]
25

2468 10 12 14 16 18 [4, 6, 8, 10, 12, 14, 16]
1-1

011235813 [1]
23

Answer: (penalty regime: 0,0, 10, 20, ... %)

1 |numeros = input().split()
2v|for i in range(len(numeros)):
numeros[i] = int(numeros[i])

primeiro, segundo = input().split()
primeiro, segundo = int(primeiro), int (segundo)
print (numeros primeiro: segundo])

on nu hw
Input Expected Got
v7 |101234567] [2, 3, 4] [2, 3, 4]
¥ 24681012 141618 [4, 6, 8, 10, 12, 14, 16] [4, 6, 8, 10, 12, 14, 16]
1-1
/ 0112356813 [1] [1]
2
/ 123456789 [5, 6, 7] [5, 6, 7]
-5 -2
v 59753 [5, 9, 7, 5, 3] [5, 9, 7, 5, 3]
~v 000 0 0

Passou em todos os teste! 7

Para resolver esta questão, atente para o uso das diferentes formas de realizar o fatiamento de listas

Notas para este envio: 1,00/1,00.
Questão 7
Correto
Atingiu 1,00 de 1,00

Escolinha do Professor Raimundo (Sujeito)

O professor Raimundo, da Escolinha do Professor Raimundo, gosta de ser o sujeito dos seus exemplos quando está dando aula sobre
verbos. O professor já possui todos os períodos sem o sujeito acrescentado. Cansado de fazer o processo manualmente, ele pediu a sua
ajuda para inserir o nome dele no início de todos os períodos. Construa um código que ajude o professor a colocar o seu nome no início
de cada período.

A Entrada consiste de:
es Número de periodos.
e Períodos sem o sujeito (um em cada linha).

A Saída deve apresentar:
e Onome “Raimundo Nonato” seguido do período da oração.

Observações:
* Todas as sentenças começam com letra minúscula.

Descrição do Exemplo 1:
e Éinformado que serão 2 períodos de entrada na primeira linha. Em seguida, apresenta-se os períodos. Na saída, foi acrescentado o
sujeito (Raimundo Nonato) ao início dos períodos, conforme apresentado na saída.

For example:
Input Result
2 Raimundo Nonato deu aula.
deu aula. Raimundo Nonato estudou muito para a prova de apc.

estudou muito para a prova de apc.

1 Raimundo Nonato tirou 10 no teste.
tirou 10 no teste.

5 Raimundo Nonato não gostou do desempenho da turma na
não gostou do desempenho da turma na prova. prova.
ficou bravo após os alunos atrapalharem a sua | Raimundo Nonato ficou bravo após os alunos atrapalharem a

aula. sua aula.

gritou! Raimundo Nonato gritou!

curtiu a publicação da UnB. Raimundo Nonato curtiu a publicação da UnB.
programou muito. Raimundo Nonato programou muito.

Answer: (penalty regime: 0,0, 10, 20, ... %)

1 |n = int(input())

2+|for i in range(n):

3 texto = input()
print("Raimundo Nonato "+texto)

4
5
6
7
Input

v |2
deu aula.
estudou muito para a prova
de apc.

Vv i1
tirou 10 no teste.

7 (5
não gostou do desempenho
da turma na prova.
ficou bravo após os alunos
atrapalharem a sua aula.
gritou!
curtiu a publicação da
UnB.
programou muito.

io

já
se revoltou contra a
coordenação.
se fez disponível para
ajudar.
se virou para observar o
pássaro.
se ajudou a estudar usando
o método pomodoro.

wv (14
ajudou.
gritou!
estudou.
amou.
odiou.
gostou.
sentiu.
recebeu.
compoz.
analisou.
apagou.
escreveu.
anotou.
planejou.

Passou em todos os teste! 4

Expected

Raimundo Nonato
Raimundo Nonato
para a prova de

Raimundo Nonato

deu aula.
estudou muito
ape.

tirou 10 no

Got

Raimundo Nonato
Raimundo Nonato

deu aula. <a
estudou muito

teste.

Raimundo Nonato não gostou do
desempenho da turma na prova.
Raimundo Nonato ficou bravo após
os alunos atrapalharem a sua
aula.

Raimundo Nonato gritou!

Raimundo Nonato curtiu a
publicação da UnB.

Raimundo Nonato programou muito.

Raimundo Nonato se revoltou
contra a coordenação.
Raimundo Nonato se fez
disponível para ajudar.
Raimundo Nonato se virou para
observar o pássaro.

Raimundo Nonato se ajudou a
estudar usando o método

pomodoro.

Raimundo Nonato ajudou.

Raimundo Nonato gritou!

Raimundo Nonato estudou.

Raimundo Nonato amou.

Raimundo Nonato odiou.

Raimundo Nonato gostou.

Raimundo Nonato sentiu.

Raimundo Nonato recebeu.

Raimundo Nonato compoz.

Raimundo Nonato analisou.

Raimundo Nonato apagou.

Raimundo Nonato escreveu.

Raimundo Nonato anotou.

Raimundo Nonato planejou.

Para resolver esta questão, pode-se utilizar a função map

[Correto |

Notas para este envio: 1,00/1,00.

para a prova de apc.

Raimundo Nonato tirou 10 no ve
teste.

Raimundo Nonato não gostou do av

desempenho da turma na prova.
Raimundo Nonato ficou bravo após
os alunos atrapalharem a sua
aula.

Raimundo Nonato gritou!

Raimundo Nonato curtiu a
publicação da UnB.

Raimundo Nonato programou muito.

Raimundo Nonato se revoltou av
contra a coordenação.

Raimundo Nonato se fez

disponível para ajudar.

Raimundo Nonato se virou para
observar o pássaro.

Raimundo Nonato se ajudou a

estudar usando o método

pomodoro.

Raimundo Nonato ajudou. v

Raimundo Nonato gritou!

Raimundo Nonato estudou.

Raimundo Nonato amou.

Raimundo Nonato odiou.

Raimundo Nonato gostou.

Raimundo Nonato sentiu.

Raimundo Nonato recebeu.

Raimundo Nonato compoz.

Raimundo Nonato analisou.

Raimundo Nonato apagou.

Raimundo Nonato escreveu.

Raimundo Nonato anotou.

Raimundo Nonato planejou.
Questão 8
Correto
Atingiu 1,00 de 1,00

Debuggando Listas 1

O uso de listas sem os devidos cuidados (e de outros objetos mutáveis) pode levar a longas horas de depuração. Abaixo uma função em
Python que usa listas de forma errada. A função deveria receber como parâmetro uma lista com números reais e retornar como
resultado uma lista contendo o valor da mediana, do elemento da lista que é o mais próximo da média aritmética, e a posição desse
elemento na lista (seu índice) - nesta ordem. Depure a função para fazê-la funcionar corretamente.

def mediana e mais proximo media e pos (lista):
lista = lista.sort()
tam = len(lista)

if tam > 0:
if tam % 2 ==
mediana = (lista[int(tam/2)] + lista[int(tam/2-1)])/2
else:
mediana = (lista[int(tam/2)])

somador = 0
for i in lista:
somador += i
media = somador/tam
delta = lista2[tam-1] - lista2[0]
prox_media = lista[0]
index=0
for i in lista:
if abs (media-i) < delta:
prox_media = i
index = i
delta = media - i
else:
prox_media = None
mediana = None
index = None

return mediana, prox media, index

Entrada

e Afunção mediana e mais proximo media e pos(x), onde x é uma lista de números reais

Saída

e Ovalor da mediana, o número real da lista mais próxima da média aritmética, a sua posição na lista.

Observação
e Comose calcula a Mediana:
© Para calcular a mediana organizam-se os dados de forma crescente ou decrescente, Esta lista é o ROL de dados. Após,
verificamos se a quantidade de dados no ROL é par ou ímpar.
= Sea quantidade de dados no ROL é ímpar, a mediana é o valor do meio, da posição central.
= Se a quantidade de dados no ROL é par, a mediana é a média aritmética dos valores centrais.
e Nocaso de haver mais de um valor mais próximo à média, selecione o primeiro deles.

For example:
Test Result
lista = [1, 2, 3, 4] [2.5, 2, 1]

print (mediana e mais proximo media e pos(lista))

lista = [1, 1, 1, 1, 1, 1, 1, 50, 43, 0] [1.0, 1, 0]
print (mediana e mais proximo media e pos(lista))

lista = [] [None, None, None]
print (mediana e mais proximo media e pos(lista))

Answer: (penalty regime: 0,0, 10, 20, ... %) É 4
*
RESET ANSWER

1v|def mediana e mais proximo media e pos(lista):
2 lista2 = lista[:]
3 lista = sorted(lista)
4 tam = len(lista)
5 #print("lista:", lista)
6¥ if tam > @:
7v if tam % 2 == @:
8 mediana = (lista[int(tam/2)] + lista[int(tam/2-1)])/2
Sy else:
10 mediana = (lista[int(tam/2)])
11 somador = @
12 v for i in lista:
13 somador += i
14 media = somador/tam
15 delta = lista[tam-1] - lista[@]
16 prox media = lista[@]
17 index=6
18 for i in range(len(lista2)):
19 ¥ if abs(media-lista2[i]) < delta:
28 prox_media = lista2[i]
21 index =i
22 delta = abs(media - lista2[i])
23 #print("-"*70)
24 #print("prox_media:", prox_media)
25 #print("index:", index)
26 #print("delta:",delta)
27 w else:
28 prox_media = None
29 mediana = None
30 index = None
31 return [mediana, prox_media, index]
Test Expected Got
/ |ilista = [1, 2, 3, 4] [2.5, 2, 1] [2.5, 2, 1]

print (mediana e mais proximo media e pos (lista) )

/ |lista = [1, 1, 1, 1, 1, 1, 1, 50, 43,0] [1.0, 1, 0] [1.0, 1, 0]
print (mediana e mais proximo media e pos(lista))

A lista = [1] [None, None, [None, None,
print (mediana e mais proximo media e pos(lista)) None] None]
4 (lista = (10, 9, 8, 7, 6, 5, 4, 3, 2, 1] [5.5, 6, 4] [5.5, 6, 4]

print (mediana e mais proximo media e pos (lista) )

/ | lista = [123, 486, 159, 321, 357, 753, 125, 652, 111, 987, [357, 486, 1] [357, 486, 1]
987]
print (mediana e mais proximo media e pos(lista))

Passou em todos os teste! 4

Use um debugger para depurar o código.

[correto |

Notas para este envio: 1,00/1,00.
Questão 9
Correto
Atingiu 1,00 de 1,00

Sala de Espera

Bruna precisa fazer um exame de sangue. Ela chegou no laboratório, e foi pedido que ela espere na sala de espera. Essa sala possui m
fileiras com n cadeiras cada. O espaço entre cada cadeira é de 1m.

Como ainda estamos em pandemia, Bruna gostaria de se sentar o mais distante possível de outras pessoas, mas ela está há muito
tempo sem comer, e não consegue mais pensar com clareza para decidir o melhor lugar, então você vai ajudá-la, encontrando o lugar
vago em alguma das m fileiras que maximize a distância para qualquer vizinho na mesma fileira.

Entrada

À primeira linha da entrada possui dois inteiros: m en, o número de fileiras, e a quantidade de cadeiras em cada fileira,
respectivamente. (1 < m < 10;2<n < 100).

As próximas m linhas da entrada contém n inteiros cada, as m fileiras da sala. Cada fileira é representada por n inteiros,
i, 01,..-@,-1,0ndea; € {0,1}.Sea; = 00 lugar está desocupado, e Bruna pode se sentar nele. Caso contrário, o lugar está
ocupado. É garantido que haverá pelo menos 1 espaço vazio em cada fileira e que há pelo menos uma pessoa em cada fileira.

Saída
imprima a maior distância que Bruna pode ficar de qualquer outra pessoa em uma fileira.
Observações

¢ No primeiro exemplo de teste, a maior distância possível para outra cadeira ocupada ocorre quando Bruna senta na primeira
cadeira da primeira fila;
e Nosegundo exemplo de teste, Bruna consegue se sentar, no máximo, a 1 metro de qualquer outra cadeira ocupada.

For example:

Input Result

HotHos
Horoa
oooo
oHrHoo
HH oo
HH HA

PN
oF
MN
o
o
H
H

10101
01011

b
B
B
RoR
o
o
m

ooHw

HoHo
H
o
H
H
H

Answer: (penalty regime: 0,0, 10, 20, ... %)

1 v| def menordist(texto,n):

2 lista = texto.split()

3 distancia = len(lista)

4y for k in range(1, len(lista)):

5y if n+k < len(lista):

6y if lista[n+k] =="1':

7 return k

8v if n-k >= 0:

oy if lista[n-k] =='1':

16 return k

11

12 v| def Maislong(texto):

13 lista = texto.split()

14 maiordistancia = 0

15 v for i in range(len(lista)):

16v if lista[i] == "e":

17 v if menordist(texto,i) > maiordistancia:
18 maiordistancia = menordist(texto,i)
19 return maiordistancia

E b 4
21 |n,m = input().split() +
22 [n,m = int(n),int(m)

23 |maiordistancia2 = 6

24 v|for i in range(n):

25 texto = input()

26 v if Maislong(texto)> maiordistancia2:

27 maiordistancia2 = Maislong(texto)

28 |print(maiordistancia2)

29

30

31

32
Input Expected | Got

Y (46 4 4 Vv
000011
110001
000101
110011

/ |212 1 1 Vv
100100110101
111100101011

/ 38 3 3 v
11101111
00010101
011 [o

9 1255 4 4 v
0111011000110001000111101000000011010111
100011001101111
1000101110001110000111001111001001101100
010001011110011

9 1147 4 4 v
0000100001011100101001011001011101110101
1010011

VY |382 3 3 <a
1101010100101100000100010111110010011010
1111101110111101101001000011001000100101
00
1111110001111110000111001110000111101110
1100010110000001010011001001000001111010
01
1100000100011010001001001110110011010001
1110000001001011010011010011000101111111
01

Passou em todos os teste! 4

Vamos ver primeiro como resolver esse problema para apenas 1 fileira de cadeiras:

Primeiro, se a primeira cadeira (mais à esquerda) estiver livre, podemos escolher ela e ficar a é metros de distância da pessoa mais à
esquerda já sentada na fileira (a pessoa na posição a;. Essa situação é semelhante para o lado direito da fileira, mas ficaremos à

n — à — 1 metros. Veja a figura abaixo, onde a primeira cadeira é marcada por L e a mais à direita por R. Repare como a distância até à
é a discutida.

L000:000R

Já no meio da fileira a situação é diferente, porque temos que considerar os 2 vizinhos, da esquerda e da direita. Então podemos
descobrir qual a distância entre 2 pessoas consecutivas sentadas, e sentar na posição exatamente na metade, maximizando a distância
para ambas.

... 10007...

Pegamos a distância de 7 até 7 e dividimos na metade, descartando a parte fracionária. A cada novo cálculo é necessário atualizar a
maior distância já calculada até agora.

Sabendo fazer para uma fileira, basta repetir esse procedimento para cada uma delas :) 2
*
[Correto |

Notas para este envio: 1,00/1,00.
Questão 10

Parcialmente correto

Atingiu 0,86 de 1,00

Fibonacci III

Na matemática, a Sequência de Fibonacci, é uma sequência de números inteiros, começando por 0, na qual, cada termo subsequente
corresponde à soma dos dois anteriores. Os números de Fibonacci são, portanto, os números que compõem a seguinte sequência:

0,1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, ...

Após dominar o uso de funções recursivas envolvendo fibonacci, Charlinho ficou com uma pergunta na cabeça: "Quantas vezes cada
chamada para a função fibonacci é realizada para cada número menor que 7?" Para ajudar a responder a essa pergunta, ele resolveu
desenhar uma estratura que parece uma árvore de ponta cabeça com as quantidades de chamadas, e ela ficou da seguinte forma:

=

1

dá
ae
| E

Perceba que na árvore, Charlinho coloca no topo o valor que deseja calcular (Fibonacci de 4). Essa chamada gera outras duas chamadas
para Fibonnaci de 2 e 3. A chamada de Fibonacci de 2 gera as chamadas de Fibonacci de 1 e O enquanto a chamada de Fibonacci de 3
geram as chamadas de Fibonacci de 2 e 1. Por fim, a chamada de Fibonacci de 2 geram as chamadas de Fibonacci de 1 e O.

Para não precisar sempre desenhar essa árvore, ele pediu a sua ajuda para implementar um programa que conte quantas vezes cada
chamada da função fibonacci é realizada, para cada valor de entrada diferente da função recursiva. Observe que, ao elaborar seu
programa, você deve definir uma função fibonacci que recebe como parâmetro um número inteiro n fornecido da entrada padrão, e
considerá-la na resolução do problema.

Entrada
À entrada consiste em um único inteiro O < n < 30 que indica a quantidade de termos da sequência de Fibonacci.

Saída
A saída deve conter uma linha com um inteiro indicando o n-ésimo termo da sequência de fibonacci, e em seguida outras 2 + Linhas
com os quantitativos de vezes em que cada função é chamada para um determinado valor menor ou igual an, conforme os exemplos.

Observações

e Noterceiro exemplo de teste, o quarto termo da sequência de fibonacci é 3. Assim Termo: 3". Para calcular o fibonacci de 4,
calculam-se: 2 vezes o fibonacci de 0, 3 vezes o fibonacci de 1, 2 vezes o fibonacci de 2, 1 vez o fibonacci de 3 e 1 vez o fibonacci de
4.

For example:

Input | Result

0 Termo: 0
Quantidades:
fibonacci(0) - 1

1 Termo: 1
Quantidades:
fibonacci (0) - 0

fibonacci (1) - 1 b 4
*
Input | Result

4 Termo: 3
Quantidades:
fibonacci (0) -
fibonacci(1) -
fibonacci (2) -
fibonacci (3) -

PRN WN

fibonacci (4) -

Answer: (penalty regime: 0,0, 10, 20, ... %)
1 |listfib =[@,0,0,0,0]

2 |listfib += [0,0,0,0,0]
3 |listfib += [0,0,0,0,8]
4 |listfib += [0,0,0,0,0]
5 |listfib += [0,0,0,0,0]
6 |listfib += [0,0,0,0,0]
7 |#print(len(listfib))
8 v|def fib(n):

Sy if n == @:

19 listfib[@] += 1
11 return @

12v elif n ==

13 listfib[1] += 1
14 return 1

15 v else:

16 listfib[n] += 1
17 return fib(n-1) + fib(n-2)

18 |n = int(input())

19 |print(f"Termo: {fib(n)}")

28 |print("Quantidades:")
21v|for i in range(len(listfib)):
22¥ if not(1 in listfib[i:]):

23 break

249 else:

25 print(f"fibonacci({i}) - {listfib[i]}")

26

27

Input | Expected Got

¥ 0 Termo: 0 Termo: 0 aS
Quantidades: Quantidades:
fibonacci(0) - 1 fibonacci(0) - 1

ii Termo: 1 Termo: 1 É
Quantidades: Quantidades:
fibonacci(0) - 0 fibonacci(0) - 0
fibonacci(l) - 1 fibonacci(l) - 1

v4 Termo: 3 Termo: 3 v
Quantidades: Quantidades:

fibonacci(0) -
fibonacci (1) -
fibonacci(2) -

fibonacci(0) -
fibonacci(l) -
fibonacci(2) -

Fibonacci (3) — Fibonacci (3) -

PRN WN
PREM WN

fibonacci(4) - fibonacci (4) -
Input | Expected Got

/ |12 Termo: 144 Termo: 144
Quantidades: Quantidades:
fibonacci(0) - 89 fibonacci (0) - 89
fibonacci(1) - 144 | fibonacci (1) - 144
fibonacci(2) - 89 fibonacci (2) - 89
fibonacci(3) - 55 fibonacci(3) - 55
fibonacci(4) - 34 fibonacci(4) - 34
fibonacci (5) - 21 | fibonacci(5) - 21
fibonacci(6) - 13 fibonacci (6) - 13
fibonacci(7) - 8 fibonacci (7) - 8
fibonacci(8) - 5 fibonacci(8) - 5
fibonacci(9) - 3 Fibonacci (9) - 3
fibonacci(10) - 2 fibonacci (10) 2
fibonacci (11) - fibonacci (11)
fibonacci (12) - fibonacci (12)

/ |7 Termo: 13 Termo: 13
Quantidades: Quantidades:
fibonacci(0) - 8 fibonacci (0) - 8
fibonacci(l) - 13 fibonacci(1) - 13
fibonacci(2) - 8 fibonacci(2) - 8
fibonacci(3) - 5 fibonacci(3) - 5
fibonacci(4) - 3 fibonacci(4) - 3
fibonacci(5) — 2 fibonacci(5) - 2
fibonacci(6) - 1 fibonacci (6) - 1
fibonacci(7) - 1 fibonacci(7) - 1

9 16 Termo: 987 Termo: 987
Quantidades: Quantidades:
fibonacci(0) - 610 | fibonacci (0) - 610
fibonacci (1) - 987 | fibonacci (1) - 987
fibonacci(2) - 610) fibonacci(2) - 610
fibonacci(3) - 377 | fibonacci(3) - 377
fibonacci (4) - 233 | fibonacci(4) - 233
fibonacci(5) - 144 | fibonacci (5) - 144
fibonacci (6) - 89 fibonacci (6) - 89
fibonacci(7) - 55 fibonacci(7) - 55
fibonacci(8) - 34 fibonacci(8) - 34
fibonacci(9) - 21 fibonacci (9) - 21
fibonacci (10) - 13 | fibonacci (10) 13
fibonacci(11) - 8 fibonacci (11) 8
fibonacci(l2) - 5 fibonacci (12) 5
fibonacci (13) - 3 fibonacci (13) 3
fibonacci(l4) - 2 fibonacci (14) 2
fibonacci (15) - 1 | fibonacci (15) 1
fibonacci(16) - 1 fibonacci (16) 1

Your code failed one or more hidden tests.

Essa questão pode ser respondida criando a função fibonacci para fazer a chamada a uma função recursiva que efetivamente ira
calcular o fibonacci do número e mostrar a resposta na tela. A função recursiva pode atualizar um contador em formato de lista onde
cada posição corresponde ao fibonacci do número de mesmo valor da posição. Sempre que fibonacci de i for chamado o valor da
posição i na lista é atualizado de 1 para contabilizar mais uma chamada a fibonacci de i.

No corpo principal do seu programa, basta chamar fibonacci(n) e imprimir o que foi solicitado.

[Parcialmente correto

Notas para este envio: 0,86/1,00.
